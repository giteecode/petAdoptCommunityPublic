<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.adopt.mapper.CreditsMapper">
    
    <resultMap type="Credits" id="CreditsResult">
        <result property="id"    column="id"    />
        <result property="openId"    column="open_id"    />
        <result property="creditsNum"    column="credits_num"    />
        <result property="dayNum"    column="day_num"    />
        <result property="isDeleted"    column="is_deleted"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCreditsVo">
        select id, open_id, credits_num, day_num, is_deleted, create_time, update_time from credits
    </sql>

    <select id="selectCreditsList" parameterType="Credits" resultMap="CreditsResult">
        <include refid="selectCreditsVo"/>
        <where>  
            <if test="openId != null  and openId != ''"> and open_id = #{openId}</if>
            <if test="isDeleted != null  and isDeleted != ''"> and is_deleted = #{isDeleted}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''"> and update_time between #{params.beginUpdateTime} and #{params.endUpdateTime}</if>
        </where>
    </select>
    
    <select id="selectCreditsById" parameterType="Long" resultMap="CreditsResult">
        <include refid="selectCreditsVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCredits" parameterType="Credits" useGeneratedKeys="true" keyProperty="id">
        insert into credits
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="openId != null and openId != ''">open_id,</if>
            <if test="creditsNum != null">credits_num,</if>
            <if test="dayNum != null">day_num,</if>
            <if test="isDeleted != null and isDeleted != ''">is_deleted,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="openId != null and openId != ''">#{openId},</if>
            <if test="creditsNum != null">#{creditsNum},</if>
            <if test="dayNum != null">#{dayNum},</if>
            <if test="isDeleted != null and isDeleted != ''">#{isDeleted},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateCredits" parameterType="Credits">
        update credits
        <trim prefix="SET" suffixOverrides=",">
            <if test="openId != null and openId != ''">open_id = #{openId},</if>
            <if test="creditsNum != null">credits_num = #{creditsNum},</if>
            <if test="dayNum != null">day_num = #{dayNum},</if>
            <if test="isDeleted != null and isDeleted != ''">is_deleted = #{isDeleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCreditsById" parameterType="Long">
        delete from credits where id = #{id}
    </delete>

    <delete id="deleteCreditsByIds" parameterType="String">
        delete from credits where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>